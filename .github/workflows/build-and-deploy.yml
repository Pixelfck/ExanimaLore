# Building and deploying a Jekyll site with pre-minified resources to GitHub Pages
name: Build and Deploy to GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Cleanup unneeded files
        run: |
          sudo rm -rf ./app/dist/.gitkeep
          sudo rm -rf ./app/src/resources/*.min.css
          sudo rm -rf ./app/src/resources/*.min.css.map
          sudo rm -rf ./app/src/resources/*.min.js
          sudo rm -rf ./app/src/resources/*.min.js.map
      - name: Minify .css and .js files
        run: |
          npm install -g csso-cli
          for f in ./app/src/resources/*.css; do csso --source-map file -i $f -o ${f%.*}.min.css; done
          npm install -g terser
          for f in ./app/src/resources/*.js; do terser $f --comments false --source-map "filename='${f%.*}.min.js.map',url='${f%.*}.min.js.map'" -c -m -o ${f%.*}.min.js; done
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./app/src
          destination: ./app/dist
      - name: Remove Jekyll assets
        run: sudo rm -rf ./app/dist/assets
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./app/dist

  # Deployment job
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
